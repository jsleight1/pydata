# Simple workflow for deploying static content to GitHub Pages
name: Deploy coverage to GitHub pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["development"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  coverage:
    environment: 
      name: github-pages 
      url: ${{ steps.deployment.outputs.page_url }} 
    runs-on: ubuntu-latest
    container:
      image: docker.io/jsleight1/pydata:3.10-latest
    steps:
      - uses: actions/checkout@v3
      - name: Generate coverage report
        id: coverage
        run: |
          pip install anybadge
          apt-get -y install jq
          poetry --version
          poetry check
          poetry run coverage run -m pytest
          poetry run coverage json
          poetry run coverage html
          covn=$(cat coverage.json | jq '.["totals"]["percent_covered_display"]' | sed 's/"//g')%
          echo $covn
          anybadge --label="Coverage" --value=$covn --file=coverage.svg 25=red 50=orange 75=yellow 100=green    
      - name: upload artifact 
        uses: actions/upload-pages-artifact@v1
        with: 
          path: './htmlcov/'
      - name: deploy to Github pages 
        uses: actions/deploy-pages@v2
        id: deployment